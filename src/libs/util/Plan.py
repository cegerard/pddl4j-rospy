#!/usr/bin/env python


class Plan:
    """
    This interface defines the main methods of to access a search generated by a planner.
    """

    def __init__(self):
        raise Exception

    def size(self):
        """
        Returns the size of the search. The size of the search is its number of actions.
        :return: the size of the search.
        """

    def makespan(self):
        """
        Returns the makespan of the search. The makespan is the the time difference between the start and finish of the
        search.
        :return: the makespan of the search
        """

    def cost(self):
        """
        Returns the cost of the search. The cost of a search is the sum of the cost of its actions.
        :return: the cost of the search.
        """

    def time_specifiers(self):
        """
        Returns the ordered set of time specifiers used in this search.
        :return: the ordered set of time specifiers used in this search.
        """

    def actions(self):
        """
        Returns the list of actions contained in the search in the ordering of their time specifiers.
        :return:he ordered set of actions of the search.
        """

    def _get_actions_set(self, time):
        """
        Returns the set of actions at a specified time specifier.

        :param time: the time specifier.
        :return:the set of actions at a specified time specifier or null if no actions are scheduled in the search at the time specifier.
        """

    def is_empty(self):
        """
        Returns if the search is empty.
        :return: <code>true</code> if the search is empty; <code>false</code> otherwise.
        """

    def add(self, time, action):
        """
        Adds an action at a specified time specifier in the search.
        :param time: time the time specifier of the action in the search.
        :param action: action the action to add.
        :return: <code>true</code> if the action was added; <code>false</code> otherwise.
        """

    def remove(self, time, action):
        """
        Removes an action at a specified time specifier of the search.

        :param time: time the time specifier of the action in the search to remove.
        :param action: action the action to remove.
        :return: <code>true</code> if the action was removed; <code>false</code> otherwise.
        """

    def remove(self, time):
        """
        Removes all the actions at a specified time specifier of the search.

        :param time: time the time specifier of the actions in the search to remove.
        :return: <code>true</code> if the action was removed; <code>false</code> otherwise.
        """

    def contains(self,time, action):
        """
        Returns if an action is contained in the search at a specified time specifier.

        :param time: time the time specifier.
        :param action: action the action.
        :return: <code>true</code> if the specified action is contained in the search at the specified time specifier;
        <code>false</code> otherwise.
        """
